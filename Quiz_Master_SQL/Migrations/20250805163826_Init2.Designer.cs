// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quiz_Master_SQL.Quiz_Master_SQL.Data;

#nullable disable

namespace Quiz_Master_SQL.Migrations
{
    [DbContext(typeof(QuizMasterDbContext))]
    [Migration("20250805163826_Init2")]
    partial class Init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("File_DB.Data.Models.UserDataDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("Level")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberCreatedQuizzes")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberCreatedQuizzesChallengers")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberFavoriteQuizzes")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberFinishedChallenges")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberLikedQuizzes")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberSolvedNormalQuizzes")
                        .HasColumnType("bigint");

                    b.Property<long?>("NumberSolvedTestQuizzes")
                        .HasColumnType("bigint");

                    b.Property<long?>("Points")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UsersDataDB");
                });

            modelBuilder.Entity("Quiz_Master_SQL.Data.Models.ConfigTableDB", b =>
                {
                    b.Property<long>("MaxQuizId")
                        .HasColumnType("bigint");

                    b.Property<long>("MaxUserId")
                        .HasColumnType("bigint");

                    b.ToTable("ConfigTablesDB");
                });

            modelBuilder.Entity("Quiz_Master_SQL.Data.Models.UserDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("Password")
                        .HasColumnType("bigint");

                    b.Property<long>("UserGameId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserOptions")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UsersDB");
                });

            modelBuilder.Entity("File_DB.Data.Models.UserDataDB", b =>
                {
                    b.HasOne("Quiz_Master_SQL.Data.Models.UserDB", "UserDB")
                        .WithOne("UserDataDB")
                        .HasForeignKey("File_DB.Data.Models.UserDataDB", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserDB");
                });

            modelBuilder.Entity("Quiz_Master_SQL.Data.Models.UserDB", b =>
                {
                    b.Navigation("UserDataDB")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
